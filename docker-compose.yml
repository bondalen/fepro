version: '3.8'

services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: fepro-postgres
    environment:
      POSTGRES_DB: fepro_db
      POSTGRES_USER: fepro_user
      POSTGRES_PASSWORD: fepro_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - fepro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fepro_user -d fepro_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fepro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fepro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  backend:
    build:
      context: .
      dockerfile: infrastructure/docker/backend/Dockerfile
    container_name: fepro-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fepro_db
      SPRING_DATASOURCE_USERNAME: fepro_user
      SPRING_DATASOURCE_PASSWORD: fepro_pass
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/fepro_db
      SPRING_R2DBC_USERNAME: fepro_user
      SPRING_R2DBC_PASSWORD: fepro_pass
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ""
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fepro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: infrastructure/docker/frontend/Dockerfile
    container_name: fepro-frontend
    environment:
      VITE_API_URL: http://localhost:8082/graphql
      VITE_WS_URL: ws://localhost:8082/ws
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - fepro_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fepro_network:
    driver: bridge